#!/usr/bin/env lua

local Gin = require 'gin.core.gin'

local help_description = [[

           /++++/:
           NNNNNmm
           mNNMNmy
          .dNMMNms`
      .:+sydMMMMMdyo/-`
   `sdmmmNNNMMMMMNmdhhddo
   `dMMNNMMMMMMMMMNdhdMMy
   `dMMMNMMMMdsymMNdhdNMy
   `dMMMNNho-....:shhdNMy
   `dMMdo-......`.``:sNMy
   `dd/........-..````-hy
   `:...--.`----..`````.-
   ``//+-  G  I  N  .+-/`
   `:..-..``-...-.`.`.``-
   `hs-```-./.:`-/`.```os
   `hNms-.``.-.-.````+mmy
   `hNNNNh+.-:---`-smNNmy
   `hNNNMMMNy+.:sdNNNNNmy`
   `dNNNNMMMMMNNNNNNNNNNy`
   `hNNNNNMMMMMMMMNNmNNNy`
    ./osyhhddddddhhyss+:`

GIN v]] .. Gin.version .. [[, a JSON-API web framework.

Usage: gin COMMAND [ARGS] [OPTIONS]

The available gin commands are:
 new [name]             Create a new Gin application
 start                  Starts the Gin server
 stop                   Stops the Gin server
 console                Start a Gin console
 generate migration     Create a new migration
 migrate                Run all migrations that have not been run
 migrate rollback       Rollback one migration

Options:
 --trace                Shows additional logs
]]

local launcher = require 'gin.cli.launcher'
local application = require 'gin.cli.application'
local migrations = require 'gin.cli.migrations'
local console = require 'gin.cli.console'

-- check trace
GIN_TRACE = false
if arg[#arg] == '--trace' then
  table.remove(arg, #arg)
  GIN_TRACE = true
end

-- check args
if arg[1] == 'new' and arg[2] then application.new(arg[2])
elseif arg[1] == 'start' then launcher.start()
elseif arg[1] == 'stop' then launcher.stop()
elseif (arg[1] == 'generate' or arg[1] == 'g') and arg[2] == 'migration' then migrations.new(arg[3])
elseif arg[1] == 'migrate' and arg[2] == nil then migrations.up()
elseif arg[1] == 'migrate' and arg[2] == "rollback" then migrations.down()
elseif arg[1] == 'console' or arg[1] == 'c' then console.start()
else print(help_description)
end
